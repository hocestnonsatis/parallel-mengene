name: Documentation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rust-docs

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-docs-${{ hashFiles('**/Cargo.lock') }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential pkg-config libssl-dev

    - name: Build documentation
      run: |
        cargo doc --all --no-deps --open

    - name: Check documentation
      run: |
        cargo doc --all --no-deps --document-private-items

    - name: Upload documentation
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: target/doc
        retention-days: 30

  check-links:
    name: Check Documentation Links
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-links-${{ hashFiles('**/Cargo.lock') }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential pkg-config libssl-dev

    - name: Build documentation
      run: cargo doc --all --no-deps

    - name: Install linkchecker
      run: |
        sudo apt-get install -y linkchecker

    - name: Check links
      run: |
        linkchecker target/doc/index.html --check-extern --ignore-url="^https?://localhost"

  spell-check:
    name: Spell Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5

    - name: Install aspell
      run: |
        sudo apt-get update
        sudo apt-get install -y aspell aspell-en

    - name: Check spelling in README
      run: |
        aspell check README.md --mode=markdown

    - name: Check spelling in documentation
      run: |
        find docs/ -name "*.md" -exec aspell check {} --mode=markdown \;

  generate-changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Generate changelog
      run: |
        echo "# Changelog" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "All notable changes to this project will be documented in this file." >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "## [Unreleased]" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### Added" >> CHANGELOG.md
        echo "- New features and improvements" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### Changed" >> CHANGELOG.md
        echo "- Changes to existing functionality" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### Fixed" >> CHANGELOG.md
        echo "- Bug fixes" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### Removed" >> CHANGELOG.md
        echo "- Removed features" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        
        # Get recent commits
        git log --oneline --since="1 month ago" >> recent_commits.txt
        echo "" >> CHANGELOG.md
        echo "### Recent Commits" >> CHANGELOG.md
        echo "\`\`\`" >> CHANGELOG.md
        cat recent_commits.txt >> CHANGELOG.md
        echo "\`\`\`" >> CHANGELOG.md

    - name: Upload changelog
      uses: actions/upload-artifact@v4
      with:
        name: changelog
        path: CHANGELOG.md
        retention-days: 30
